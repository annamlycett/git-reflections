>>How did viewing a diff between two versions
of a file help you spot the bug?

It was helpful because it showed lines
that were omitted in and/or added to the code. (Mac/Linux)

It was helpful because you could compare
individual lines/blocks of code picked up by the tool. (Win)


>>How could having easy access to the entire history
of a file make you a more efficient programmer
in the long term?

You can see methods and approaches that have been tested
and what's worked and been dropped, especially if
there are relevant comments added to the individual versions
or even changes.


>>What do you think are the pros and cons
of manually choosing when to create a commit,
like you do in Git, vs having versions automatically saved,
like Google Docs does?

PROS:
It's easy to review commits and changes to the program
by keeping them bundled in logical "packages".

CONS:
It's easy to forget to save
before mentally moving on to the next task at hand,
at which point you need to decide
whether to undo the changes, commit and reintroduce them
or to keep the commits less logical.


>>Why do you think some version control systems,
like Git, allow saving multiple files in one commit,
while others, like Google Docs, treat each file separately?

Because they either treat each file
as an entity in its own right,
or only a part of a bigger picture
- which are two different approaches to the same issue.


>>How can you use the commands git log and git diff
to view the history of files?

Git log shows you a list of commits
together with their IDs and messages,
which sum up the changes within each commit.
From there you can compare two individual commits
and the specific changes to the code in order to fish out
the information that you're after.


>>How might using version control make you more confident
to make changes that could break something?

Using version control might help make me more confident
to make changes that could break something
because it allows me to
1. automatically track specific changes
2. easily revert back to previous versions of the code
These two steps mean that all changes are recorded
and can be undone without the need for manual file saving.


>>Now that you have your workspace set up,
what do you want to try using Git for?

To build a portfolio that shows
that I'm capable of using git/GitBash in a consistent,
logical manner that would make me a good fit
in a full-time role.




